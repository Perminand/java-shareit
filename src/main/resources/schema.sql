CREATE TABLE if not exists users (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	email varchar(50) NOT NULL,
	"name" varchar(50) NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (id),
	CONSTRAINT users_unique UNIQUE (email)
);

CREATE TABLE if not exists item_request (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	created_date timestamp(6) NOT NULL,
	description varchar(255) NOT NULL,
	requestor_id bigint NOT NULL,
	CONSTRAINT newtable_pk PRIMARY KEY (id),
	CONSTRAINT newtable_users_fk FOREIGN KEY (requestor_id) REFERENCES public.users(id)
);


CREATE TABLE if not exists items (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	available boolean NOT NULL,
	"name" varchar(50) NOT NULL,
	description varchar(255) NOT NULL,
	user_id bigint NOT NULL,
	request_id bigint,
	CONSTRAINT items_pk PRIMARY KEY (id),
	CONSTRAINT items_unique UNIQUE ("name"),
	CONSTRAINT items_users_fk FOREIGN KEY (user_id) REFERENCES users(id),
	CONSTRAINT items_item_request_fk FOREIGN KEY (request_id) references item_request(id)
);


create table if not exists bookings (
    id bigint generated by default as identity,
    start_date timestamp(6) NOT NUll,
    end_date timestamp(6) NOT NUll,
    status varchar(255) check (status in ('WAITING','APPROED','REJECTED','CANCELED')) not null,
    booker_id bigint NOT NUll,
    item_id bigint NOT NUll,
    CONSTRAINT bookings_pk PRIMARY KEY (id),
    CONSTRAINT bookings_users_fk FOREIGN KEY (booker_id) REFERENCES users(id),
    CONSTRAINT bookings_items_fk FOREIGN KEY (item_id) REFERENCES items(id)
);

